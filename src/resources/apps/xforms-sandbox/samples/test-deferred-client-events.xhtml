<xh:html xmlns:xf="http://www.w3.org/2002/xforms"
        xmlns:f="http://orbeon.org/oxf/xml/formatting"
        xmlns:xh="http://www.w3.org/1999/xhtml"
        xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
        xmlns:widget="http://orbeon.org/oxf/xml/widget"
        xmlns:ev="http://www.w3.org/2001/xml-events"
        xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <xh:head>
        <xh:title>Deferred Client Events</xh:title>
        <xf:model id="main" xxf:client.events.mode="deferred">
            <xf:instance>
                <flight focus-count="0">
                    <from/>
                    <day/>
                    <month/>
                    <year/>
                    <to/>
                </flight>
            </xf:instance>
        </xf:model>
        <xh:style type="text/css">
            input { width: 5em; }
            #maincontent div { margin-bottom: .5em; }
        </xh:style>
        <xh:link type="text/css" rel="stylesheet" href="/ops/yui/logger/assets/logger.css"/>
        <xh:script type="text/javascript" src="/ops/yui/logger/logger.js"/>
        <xh:script type="text/javascript" src="/ops/yui/event-simulate/event-simulate.js"/>
        <xh:script type="text/javascript" src="/ops/yui/yuitest/yuitest.js"/>
        <xh:script type="text/javascript">
            <![CDATA[

                function focusCount() {
                    return ORBEON.xforms.Document.getValue("focus-count");
                }

                YAHOO.tool.TestRunner.add(new YAHOO.tool.TestCase({

                    name: "Defered client events",

                    testGoThroughFields: function() {

                        var operations = [
                            function() {
                                ORBEON.xforms.Events.focus({ target: ORBEON.util.Dom.getChildElementByIndex(document.getElementById("from"), 0) });
                            },
                            function() {
                                YAHOO.util.Assert.areEqual(0, focusCount());
                                ORBEON.xforms.Events.focus({ target: ORBEON.util.Dom.getChildElementByIndex(document.getElementById("day"), 0) });
                            },
                            function() {
                                YAHOO.util.Assert.areEqual(2, focusCount());
                                ORBEON.xforms.Events.focus({ target: ORBEON.util.Dom.getChildElementByIndex(document.getElementById("month"), 0) });
                            },
                            function() {
                                YAHOO.util.Assert.areEqual(2, focusCount());
                                ORBEON.xforms.Events.focus({ target: ORBEON.util.Dom.getChildElementByIndex(document.getElementById("year"), 0) });
                            },
                            function() {
                                YAHOO.util.Assert.areEqual(2, focusCount());
                                ORBEON.xforms.Events.focus({ target: ORBEON.util.Dom.getChildElementByIndex(document.getElementById("to"), 0) });
                            },
                            function() {
                                YAHOO.util.Assert.areEqual(5, focusCount());
                                ORBEON.xforms.Events.focus({ target: ORBEON.util.Dom.getChildElementByIndex(document.getElementById("from"), 0) });
                            },
                            function() {
                                YAHOO.util.Assert.areEqual(5, focusCount());
                            }
                        ];

                        var operationIndex = 0;
                        var testCase = this;
                        function run() {
                            operations[operationIndex]();
                            operationIndex++;
                            if (operations.length > operationIndex) {
                                testCase.wait(run, 3000);
                            }
                        }
                        run();
                    }
                }));
                ORBEON.xforms.Events.orbeonLoadedEvent.subscribe(function() {
                    if (parent && parent.TestManager) {
                        parent.TestManager.load();
                    } else {
                        new YAHOO.tool.TestLogger();
                        YAHOO.tool.TestRunner.run();
                    }
                });
            ]]>
        </xh:script>
    </xh:head>
    <xh:body>
        <xf:group>
            <xf:action ev:event="DOMFocusIn">
                <xf:setvalue ref="@focus-count" value=". + 1"/>
            </xf:action>
            <xh:div>
                <xf:output ref="@focus-count" id="focus-count"/>
            </xh:div>
            <xh:div>
                <xf:input ref="from" id="from">
                    <xf:label>From: </xf:label>
                </xf:input>
            </xh:div>
            <xh:div class="xxforms-events-mode-default">
                <xf:input ref="day" id="day">
                    <xf:label>Day: </xf:label>
                </xf:input>
                <xf:input ref="month" id="month">
                    <xf:label>Month: </xf:label>
                </xf:input>
                <xf:input ref="year" id="year">
                    <xf:label>Year: </xf:label>
                </xf:input>
            </xh:div>
            <xh:div>
                <xf:input ref="to" id="to">
                    <xf:label>To: </xf:label>
                </xf:input>
            </xh:div>
        </xf:group>
    </xh:body>
</xh:html>
