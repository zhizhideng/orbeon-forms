<!--
  Copyright (C) 2009 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xh:html xmlns:xf="http://www.w3.org/2002/xforms"
        xmlns:xh="http://www.w3.org/1999/xhtml"
        xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
        xmlns:ev="http://www.w3.org/2001/xml-events"
        xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
        xmlns:xbl="http://www.w3.org/ns/xbl"
        xmlns:fr="http://orbeon.org/oxf/xml/form-runner">

    <xh:head>
        <xh:title>XBL - Google Map</xh:title>
        <!--<xh:script src="http://maps.google.com/maps?file=api&amp;v=2" type="text/javascript"/>-->
        <xf:model id="main-model" xxf:external-events="my-show-candidates">
            <xf:instance id="main-instance">
                <instance>
                    <street>2000 Howard Avenue</street>
                    <city/>
                    <state/>
                    <zip/>
                    <address>USA</address>
                    <candidates text=""/>
                    <show-map>false</show-map>
                </instance>
            </xf:instance>

            <!-- Call Google geocoding API, and pass back result to XForms -->
            <xf:action ev:event="DOMActivate" ev:observer="validate-trigger">
                <xxf:script>
                    <![CDATA[
                        var geocoder = new GClientGeocoder();
                        var address = ORBEON.xforms.Document.getValue("address");
                        geocoder.getLocations(address, function(r) {
                            var addressesXML = [];
                            addressesXML.push("<addresses>");
                            for (var addressIndex = 0; addressIndex < r.Placemark.length; addressIndex++) {
                                var current = r.Placemark[addressIndex];
                                addressesXML.push("<address>");
                                addressesXML.push("<full>" + current.address + "</full>");
                                addressesXML.push("<street>" + current.AddressDetails.Country.AdministrativeArea.Locality.Thoroughfare.ThoroughfareName + "</street>");
                                addressesXML.push("<city>" + current.AddressDetails.Country.AdministrativeArea.Locality.LocalityName + "</city>");
                                addressesXML.push("<state>" + current.AddressDetails.Country.AdministrativeArea.AdministrativeAreaName + "</state>");
                                addressesXML.push("<zip>" + current.AddressDetails.Country.AdministrativeArea.Locality.PostalCode.PostalCodeNumber + "</zip>");
                                addressesXML.push("</address>");
                            }
                            addressesXML.push("</addresses>");
                            addressesXML = addressesXML.join("");
                            ORBEON.xforms.Document.setValue("candidates", addressesXML);
                            ORBEON.xforms.Document.dispatchEvent("main-model", "my-show-candidates");
                        });
                    ]]>
                </xxf:script>
            </xf:action>

            <!-- Parse XML we got from the client -->
            <xf:action ev:event="my-show-candidates">
                <xf:delete ref="candidates/*"/>
                <xf:insert context="candidates" origin="saxon:parse(@text)"/>
                <xf:setvalue ref="candidates/@text"/>
                <xxf:show dialog="candidates-dialog" neighbor="validate-trigger"/>
            </xf:action>

        </xf:model>
        <xh:style type="text/css">
            .xforms-label                   { display: inline-block; width: expression('9em');  min-width: 9em; }
            .xforms-form div                { padding-bottom: .5em; }
        </xh:style>
    </xh:head>
    <xh:body>

        <xxf:dialog id="candidates-dialog" level="modal" close="true" draggable="false" appearance="full">
            <xf:label>Choose address</xf:label>
            <xh:ul>
                <xf:repeat ref="candidates/addresses/address">
                    <xh:li>
                        <xf:trigger appearance="minimal">
                            <xf:label ref="full"/>
                            <xf:action ev:event="DOMActivate">
                                <xf:var name="address" value="."/>
                                <xf:setvalue ref="/instance/street" value="$address/street"/>
                                <xf:setvalue ref="/instance/city" value="$address/city"/>
                                <xf:setvalue ref="/instance/state" value="upper-case($address/state)"/>
                                <xf:setvalue ref="/instance/zip" value="$address/zip"/>
                                <xf:setvalue ref="/instance/address" value="$address/full"/>
                                <xxf:hide dialog="candidates-dialog"/>
                            </xf:action>
                        </xf:trigger>
                    </xh:li>
                </xf:repeat>
            </xh:ul>
        </xxf:dialog>

        <!-- Address fields -->
        <xh:div>
            <xf:input ref="street">
                <xf:label>Street: </xf:label>
            </xf:input>
        </xh:div>
        <xh:div>
            <xf:input ref="city">
                <xf:label>City: </xf:label>
            </xf:input>
        </xh:div>
        <xh:div>
            <fr:databound-select1 ref="state" appearance="minimal" resource="/xforms-sandbox/service/zip-states">
                <xf:label>State: </xf:label>
                <xf:itemset ref="/states/state">
                    <xf:label ref="@name"/>
                    <xf:value ref="@abbreviation"/>
                </xf:itemset>
            </fr:databound-select1>
        </xh:div>
        <xh:div>
            <xf:input ref="zip">
                <xf:label>Zip: </xf:label>
            </xf:input>
        </xh:div>

        <!-- Validate address -->
        <xh:div>
            <xf:output value="normalize-space(string-join((street, city, state, zip), ' '))" id="address" style="display: none"/>
            <xf:input ref="candidates/@text" id="candidates"/>
            <xf:trigger appearance="minimal" id="validate-trigger">
                <xf:label>Validate and show on map</xf:label>
            </xf:trigger>
        </xh:div>

        <!-- Map component -->
        <xh:div>
            <fr:map address-ref="address" id="unittest-map"
                    longitude-ref="longitude" latitude-ref="latitude"
                    style="width: 500px; height: 300px"/>
        </xh:div>

    </xh:body>
</xh:html>
