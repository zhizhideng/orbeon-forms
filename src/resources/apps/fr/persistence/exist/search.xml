<!--
    Copyright (C) 2008 Orbeon, Inc.

    This program is free software; you can redistribute it and/or modify it under the terms of the
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    2.1 of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Lesser General Public License for more details.

    The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
-->
<!--
    Generic XQuery handling full-text search, structured search, paging, and sorting.
-->
<exist:query xmlns:exist="http://exist.sourceforge.net/NS/exist">
    <exist:text>
        <![CDATA[
        xquery version "1.0";
        declare namespace xmldb="http://exist-db.org/xquery/xmldb";
        declare namespace request="http://exist-db.org/xquery/request";
        declare namespace text="http://exist-db.org/xquery/text";
        declare namespace util="http://exist-db.org/xquery/util";

        (: Namespaces used in the form :)
        ]]><namespaces/><![CDATA[

        (: Get URL parameters :)
        let $page-size := request:get-parameter('page-size', '')
        let $page-number := request:get-parameter('page-number', '')
        (: If query is a single word without Lucene special characters, append a '*', else keep query as is :)
        let $query-parameter := request:get-parameter('query', '')
        let $query := if (count(tokenize($query-parameter, '\s+')) = 1 and not(string-to-codepoints($query-parameter) = string-to-codepoints('+-&amp;|!(){}[]^"~*?:\\')))
                      then concat($query-parameter, '*')
                      else $query-parameter
        let $path := request:get-parameter('path', '')
        let $value := request:get-parameter('value', '')
        (: Special language variable used for now by Form Builder :)
        let $fb-lang := request:get-parameter('lang', 'en')

        (: Get all query results, independently from paging :)
        let $search-results :=
            for $e in if ($query = '') then collection() else ft:query(collection()/*, $query)
                let $d := root($e)
                let $resource-uri := document-uri($d)
                let $collection-name := string-join(tokenize($resource-uri, '/')[position() lt last()], '/')
                let $resource-name := tokenize($resource-uri, '/')[last()]
                let $last-modified := xmldb:last-modified($collection-name, $resource-name)
            where $resource-name = 'data.xml' ]]><where/><![CDATA[
            order by $last-modified descending
            return $d

        (: Count all data.xml documents in this and descendant collections :)
        let $total := count(for $d in collection() where ends-with(document-uri($d), 'data.xml') return 1)

        (: Return actual results :)
        return
            <documents total="{$total}" search-total="{count($search-results)}" page-size="{$page-size}"
                       page-number="{$page-number}" query="{$query}">
                {
                    for $d in subsequence($search-results, (xs:integer($page-number) - 1) * xs:integer($page-size) + 1, xs:integer($page-size))
                        let $resource-uri := document-uri($d)
                        let $collection-name := string-join(tokenize($resource-uri, '/')[position() lt last()], '/')
                        let $resource-name := tokenize($resource-uri, '/')[last()]
                        let $resource-id := tokenize($resource-uri, '/')[last() - 1]
                        let $last-modified := xmldb:last-modified($collection-name, $resource-name)
                    return
                        <document created="{xmldb:created($collection-name, $resource-name)}" last-modified="{$last-modified}" name="{$resource-id}">
                            <details>
                                ]]><details/><![CDATA[
                            </details>
                        </document>
                }
            </documents>
        ]]>
    </exist:text>
</exist:query>
