<!--
  Copyright (C) 2010 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xh:html xmlns:xf="http://www.w3.org/2002/xforms"
        xmlns:xh="http://www.w3.org/1999/xhtml"
        xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
        xmlns:ev="http://www.w3.org/2001/xml-events"
        xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
        xmlns:xbl="http://www.w3.org/ns/xbl"
        xmlns:fr="http://orbeon.org/oxf/xml/form-runner">

    <xh:head>
        <xh:title>XBL - Autocomplete</xh:title>
        <xf:model id="main-model">

            <!-- Instance used to search countries -->
            <xf:instance id="search-dynamic">
                <instance><country-name/></instance>
            </xf:instance>

            <!-- Instance with all the countries -->
            <xf:instance id="all-countries" src="oxf:/forms/orbeon/controls/service/countries.xml"/>
            <!-- Instance with subset of the countries to show in the auto-complete -->
            <xf:instance id="searched-countries"><empty/></xf:instance>
            <xf:instance id="additional-countries">
                <additional-countries>
                    <country>
                        <name>United States</name>
                        <us-code>us2</us-code>
                    </country>
                    <country>
                        <name>Virgin  Islands</name>
                        <us-code>vq2</us-code>
                    </country>
                </additional-countries>
            </xf:instance>

            <!-- Internal state for this test -->
            <xf:instance id="selected-countries">
                <selected-countries readonly="false" relevant="true">
                    <static absolute-target-id="">ca</static>
                    <dynamic absolute-target-id="" label="Canada">ca</dynamic>
                    <resource absolute-target-id="" label="Canada">ca</resource>
                </selected-countries>
            </xf:instance>
            <!-- Constraint on selected country -->
            <xf:bind ref="instance('selected-countries')/*" constraint="starts-with(., 's')" readonly="../@readonly = 'true'" relevant="../@relevant = 'true'"/>

            <xf:instance id="configuration">
                <configuration>
                    <max-results-displayed>4</max-results-displayed>
                </configuration>
            </xf:instance>

            <!-- Submission getting list of updated countries -->
            <xf:submission ref="instance('search-dynamic')" id="update-countries" validate="false"
                method="post" resource="/fr/service/custom/orbeon/controls/countries" replace="instance" instance="searched-countries"/>

            <!-- Add other countries for testing to list of all countries -->
            <xf:insert ev:event="xforms-model-construct-done"
                ref="instance('all-countries')/country" origin="instance('additional-countries')/*"/>

        </xf:model>
        <xh:link type="text/css" rel="stylesheet" href="/ops/yui/logger/assets/logger.css"/>
        <xh:script type="text/javascript" src="/ops/yui/logger/logger.js"/>
        <xh:script type="text/javascript" src="/ops/yui/event-simulate/event-simulate.js"/>
        <xh:script type="text/javascript" src="/ops/yui/yuitest/yuitest.js"/>
        <xh:script type="text/javascript" src="/xbl/orbeon/autocomplete/autocomplete-unittest.js"/>
        <xh:style type="text/css">
            fieldset { margin-top: 2em }
        </xh:style>
    </xh:head>
    <xh:body>

        <xf:trigger appearance="minimal" id="toggle-readonly">
            <xf:label>Toggle readonly</xf:label>
            <xf:setvalue ev:event="DOMActivate" ref="instance('selected-countries')/@readonly" value="if (. = 'true') then 'false' else 'true'"/>
        </xf:trigger> |
        <xf:trigger appearance="minimal" id="toggle-relevant">
            <xf:label>Toggle relevant</xf:label>
            <xf:setvalue ev:event="DOMActivate" ref="instance('selected-countries')/@relevant" value="if (. = 'true') then 'false' else 'true'"/>
        </xf:trigger>

        <xh:fieldset>
            <xh:legend>Static itemset</xh:legend>
            <xh:div>
                <xf:output value="instance('selected-countries')/static" id="static-output-value">
                    <xf:label>Code: </xf:label>
                </xf:output>
            </xh:div>
            <xh:div>
                <xf:trigger appearance="minimal" id="static-set-to-canada">
                    <xf:label>Set label to Canada</xf:label>
                    <xf:dispatch ev:event="DOMActivate" targetid="static-autocomplete" name="fr-set-label">
                        <xf:property name="label" value="'Canada'"/>
                    </xf:dispatch>
                </xf:trigger> |
                <xf:trigger appearance="minimal" id="static-set-to-utopia">
                    <xf:label>Set label to Utopia</xf:label>
                    <xf:dispatch ev:event="DOMActivate" targetid="static-autocomplete" name="fr-set-label">
                        <xf:property name="label" value="'Utopia'"/>
                    </xf:dispatch>
                </xf:trigger> |
                <xf:trigger appearance="minimal" id="static-reset">
                    <xf:label>Reset</xf:label>
                    <xf:setvalue ev:event="DOMActivate" ref="instance('selected-countries')/static"/>
                </xf:trigger> |
                <xf:trigger appearance="minimal" id="static-set-to-sz">
                    <xf:label>Set value to sz</xf:label>
                    <xf:setvalue ev:event="DOMActivate" ref="instance('selected-countries')/static">sz</xf:setvalue>
                </xf:trigger> |
                <xf:trigger appearance="minimal" id="static-setfocus-outer">
                    <xf:label>Set focus outer</xf:label>
                    <xf:setfocus ev:event="DOMActivate" control="static-autocomplete"/>
                </xf:trigger> |
                <xf:trigger appearance="minimal" id="static-setfocus-inner">
                    <xf:label>Set focus inner</xf:label>
                    <xf:setfocus ev:event="DOMActivate" control="{instance('selected-countries')/static/@absolute-target-id}"/>
                </xf:trigger>
            </xh:div>
            <xh:div>
                <xf:group ref="instance('selected-countries')/static">
                    <xf:setvalue ev:event="xforms-invalid" ref="@absolute-target-id" value="event('xxf:absolute-targetid')"/>
                    <fr:autocomplete ref="." id="static-autocomplete"
                                     dynamic-itemset="false" max-results-displayed="4" tabindex="1">
                        <xf:label>Country code: </xf:label>
                        <xf:itemset ref="instance('all-countries')/country">
                            <xf:label ref="name"/>
                            <xf:value ref="us-code"/>
                        </xf:itemset>
                        <xf:alert>Value is mandatory</xf:alert>
                    </fr:autocomplete>
                </xf:group>
            </xh:div>
        </xh:fieldset>

        <xh:fieldset>
            <xh:legend>Dynamic itemset, custom</xh:legend>
            <xh:div>
                <xf:output value="instance('selected-countries')/dynamic" id="dynamic-output-value">
                    <xf:label>Code: </xf:label>
                </xf:output>
                <xf:output value="instance('selected-countries')/dynamic/@label" id="dynamic-output-label">
                    <xf:label>Label: </xf:label>
                </xf:output>
            </xh:div>
            <xh:div>
                <xf:trigger appearance="minimal" id="dynamic-set-to-canada">
                    <xf:label>Set label to Canada</xf:label>
                    <xf:dispatch ev:event="DOMActivate" targetid="dynamic-autocomplete" name="fr-set-label">
                        <xf:property name="label" value="'Canada'"/>
                    </xf:dispatch>
                </xf:trigger> |
                <xf:trigger appearance="minimal" id="dynamic-set-to-utopia">
                    <xf:label>Set label to Utopia</xf:label>
                    <xf:dispatch ev:event="DOMActivate" targetid="dynamic-autocomplete" name="fr-set-label">
                        <xf:property name="label" value="'Utopia'"/>
                    </xf:dispatch>
                </xf:trigger> |
                <xf:trigger appearance="minimal" id="dynamic-reset">
                    <xf:label>Reset</xf:label>
                    <xf:setvalue ev:event="DOMActivate" ref="instance('selected-countries')/dynamic"/>
                </xf:trigger> |
                <xf:trigger appearance="minimal" id="dynamic-setfocus-outer">
                    <xf:label>Set focus outer</xf:label>
                    <xf:setfocus ev:event="DOMActivate" control="dynamic-autocomplete"/>
                </xf:trigger> |
                <xf:trigger appearance="minimal" id="dynamic-setfocus-inner">
                    <xf:label>Set focus inner</xf:label>
                    <xf:setfocus ev:event="DOMActivate" control="{instance('selected-countries')/dynamic/@absolute-target-id}"/>
                </xf:trigger>
            </xh:div>
            <xh:div>
                <xf:group ref="instance('selected-countries')/dynamic">
                    <xf:setvalue ev:event="xforms-invalid" ref="@absolute-target-id" value="event('xxf:absolute-targetid')"/>
                    <fr:autocomplete ref="." id="dynamic-autocomplete" labelref="@label"
                                     dynamic-itemset="true">
                        <!-- React to user searching -->
                        <xf:action ev:event="fr-search-changed">
                            <xf:var name="search-value" value="event('fr-search-value')"/>
                            <xf:var name="make-suggestion" value="for $l in string-length($search-value) return $l >= 2 or $l = 0"/>
                            <xf:action if="$make-suggestion">
                                <!-- Update itemset -->
                                <xf:var name="make-suggestion" value="string-length() >= 2"/>
                                <xf:setvalue ref="instance('search-dynamic')/country-name" value="$search-value"/>
                                <xf:send submission="update-countries"/>
                                <xf:insert context="instance('searched-countries')" ref="country"
                                    origin="instance('additional-countries')/country[starts-with(name, $search-value)]"
                                    at="last()" position="after"/>
                            </xf:action>
                            <xf:action if="not($make-suggestion)">
                                <!-- Delete itemset -->
                                <xf:delete ref="instance('searched-countries')/country"/>
                            </xf:action>
                        </xf:action>

                        <xf:label>Country code: </xf:label>
                        <xf:itemset ref="instance('searched-countries')/country">
                            <xf:label ref="name"/>
                            <xf:value ref="us-code"/>
                        </xf:itemset>
                        <xf:alert>Value is mandatory</xf:alert>
                        <fr:max-results-displayed ref="instance('configuration')/max-results-displayed"/>
                    </fr:autocomplete>
                </xf:group>
            </xh:div>
        </xh:fieldset>

        <xh:fieldset>
            <xh:legend>Using resource</xh:legend>
            <xh:div>
                <xf:output value="instance('selected-countries')/resource" id="resource-output-value">
                    <xf:label>Code: </xf:label>
                </xf:output>
                <xf:output value="instance('selected-countries')/resource/@label" id="resource-output-label">
                    <xf:label>Label: </xf:label>
                </xf:output>
            </xh:div>
            <xh:div>
                <xf:trigger appearance="minimal" id="resource-set-to-canada">
                    <xf:label>Set label to Canada</xf:label>
                    <xf:dispatch ev:event="DOMActivate" targetid="resource-autocomplete" name="fr-set-label">
                        <xf:property name="label" value="'Canada'"/>
                    </xf:dispatch>
                </xf:trigger> |
                <xf:trigger appearance="minimal" id="resource-set-to-utopia">
                    <xf:label>Set label to Utopia</xf:label>
                    <xf:dispatch ev:event="DOMActivate" targetid="resource-autocomplete" name="fr-set-label">
                        <xf:property name="label" value="'Utopia'"/>
                    </xf:dispatch>
                </xf:trigger> |
                <xf:trigger appearance="minimal" id="resource-reset">
                    <xf:label>Reset</xf:label>
                    <xf:setvalue ev:event="DOMActivate" ref="instance('selected-countries')/resource"/>
                </xf:trigger> |
                <xf:trigger appearance="minimal" id="resource-setfocus-outer">
                    <xf:label>Set focus outer</xf:label>
                    <xf:setfocus ev:event="DOMActivate" control="resource-autocomplete"/>
                </xf:trigger> |
                <xf:trigger appearance="minimal" id="resource-setfocus-inner">
                    <xf:label>Set focus inner</xf:label>
                    <xf:setfocus ev:event="DOMActivate" control="{instance('selected-countries')/resource/@absolute-target-id}"/>
                </xf:trigger>
            </xh:div>
            <xh:div>
                <xf:group ref="instance('selected-countries')/resource">
                    <xf:setvalue ev:event="xforms-invalid" ref="@absolute-target-id" value="event('xxf:absolute-targetid')"/>
                    <fr:autocomplete ref="." labelref="@label" id="resource-autocomplete" resource="/xforms-controls/services/countries?country-name={$fr-search-value}" max-results-displayed="4">
                        <xf:label>Country code: </xf:label>
                        <xf:itemset ref="/countries/country">
                            <xf:label ref="name"/>
                            <xf:value ref="us-code"/>
                        </xf:itemset>
                        <xf:alert>Value is mandatory</xf:alert>
                    </fr:autocomplete>
                </xf:group>
            </xh:div>
        </xh:fieldset>

        <!-- Invisible input we use to trigger focus out events -->
        <xf:input id="focus-input" style="height: 1px; width: 1px; overflow: hidden; display: block" ref="xxf:element('dummy')"/>

    </xh:body>
</xh:html>
