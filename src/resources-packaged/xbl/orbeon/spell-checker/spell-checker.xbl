<!--
  Copyright (C) 2010 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xh="http://www.w3.org/1999/xhtml"
         xmlns:xf="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:ev="http://www.w3.org/2001/xml-events"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
         xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:saxon="http://saxon.sf.net/"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
         xmlns:oxf="http://www.orbeon.com/oxf/processors"
         xmlns:exf="http://www.exforms.org/exf/1-0" >

    <xbl:binding id="fr-spell-checker" element="fr|spell-checker">
        <xxbl:global>
            <!-- Spell checking dialog -->
            <xxf:dialog id="fr-spell-checking-dialog" class="fr-spell-checker-dialog" close="false" model="fr-spell-checker-model">
                <xf:setfocus ev:event="xxforms-dialog-open" control="ignore"/>
                <xf:label>Spelling</xf:label>

                <xf:model id="fr-spell-checker-model">

                    <!-- Request to spell checker -->
                    <xf:instance id="fr-spell-checker-request">
                        <spellrequest textalreadyclipped="0" ignoredups="1" ignoredigits="1" ignoreallcaps="1">
                            <text>Ths is a tst</text>
                        </spellrequest>
                    </xf:instance>

                    <!-- Result of spell checking -->
                    <xf:instance id="fr-spell-checker-result">
                        <spellresult error="0" clipped="0" charschecked="12">
                            <c o="0" l="3" s="1">This Th's Thus Th HS</c>
                            <c o="9" l="3" s="0">test tat ST St st</c>
                        </spellresult>
                    </xf:instance>

                    <xf:instance id="fr-spell-checker-internal">
                        <internal>
                            <readonly/>         <!-- Is the node bound to this spell checker readonly -->
                            <button/>           <!-- Node to which the YUI spell checker is bound so we can make it readonly -->
                            <unknown-word/>     <!-- The current word we're looking at and trying to fix -->
                            <correction/>       <!-- The current correction being considered -->
                            <context/>          <!-- Text around the word to fix (HTML) -->
                            <text/>             <!-- The text being corrected, annotated with corrections -->
                            <callback-id/>      <!-- Effective id of the component that opened this dialog -->
                            <is-change-all/>    <!-- Temporarily set to true|false to know the button pressed -->
                        </internal>
                    </xf:instance>

                    <xf:bind ref="instance('fr-spell-checker-internal')/button" readonly="../readonly = 'true'"/>

                    <!--  Spell checking -->
                    <xf:submission method="post" resource="{xxf:property('oxf.xforms.xbl.fr.spell-checker.service')}"
                            id="spell-check-submission" ref="instance('fr-spell-checker-request')" replace="instance" instance="fr-spell-checker-result">
                    </xf:submission>

                    <!-- The button is telling us to spell check text -->
                    <xf:action ev:event="fr-spell-check">
                        <xf:setvalue ref="instance('fr-spell-checker-request')/text" value="event('fr-text')"/>
                        <xf:setvalue ref="instance('fr-spell-checker-internal')/callback-id" value="event('fr-callback-id')"/>
                        <xf:send submission="spell-check-submission"/>
                        <!-- Iterate over the correction and insert <t> elements between <c> elements to represent the normal text (non-corrections) -->
                        <xf:action iterate="instance('fr-spell-checker-result')/c">
                            <xf:var name="current-c" value="."/>
                            <xf:var name="position" value="position()"/>
                            <xf:var name="following-c" value="$current-c/following-sibling::c[1]"/>
                            <xf:var name="offset-after-current-c" value="$current-c/@o + $current-c/@l"/>
                            <!-- If this is the first <c>, consider inserting a <t> before -->
                            <xf:action if="$position = 1">
                                <xf:insert if="$current-c/@o > 0" ref="." position="before" origin="xxf:element('t', (xxf:attribute('o', '0'), xxf:attribute('l', $current-c/@o)))"/>
                            </xf:action>
                            <!-- If we are between two <c>, consider inserting a <t> in between -->
                            <xf:action if="exists($following-c)">
                                <xf:insert if="$following-c/@o > $offset-after-current-c" ref="." position="after" origin="xxf:element('t', (xxf:attribute('o', $offset-after-current-c), xxf:attribute('l', $following-c/@o - $offset-after-current-c)))"/>
                            </xf:action>
                            <!-- If this is the last <c>, consider insert a <t> after -->
                            <xf:action if="empty($following-c)">
                                <xf:var name="text-length" value="string-length(instance('fr-spell-checker-request')/text)"/>
                                <xf:insert if="$text-length > $offset-after-current-c" ref="." position="after" origin="xxf:element('t', (xxf:attribute('o', $offset-after-current-c), xxf:attribute('l', $text-length - $offset-after-current-c)))"/>
                            </xf:action>
                        </xf:action>
                        <!-- Populate the original value of the words -->
                        <xf:action iterate="instance('fr-spell-checker-result')/*">
                            <xf:insert context="." origin="xxf:attribute('current', substring(instance('fr-spell-checker-request')/text, context()/@o + 1, context()/@l))"/>
                        </xf:action>
                        <xxf:show dialog="fr-spell-checking-dialog"/>
                        <xf:setvalue ref="instance('fr-spell-checker-internal')/current-c-index">1</xf:setvalue>
                        <xf:dispatch name="prepare-next-correction" targetid="fr-spell-checker-model"/>
                    </xf:action>

                    <!-- Prepare UI for the next correction -->
                    <xf:action ev:event="prepare-next-correction">
                        <xf:var name="current-c" value="(instance('fr-spell-checker-result')/c[empty(@handled)])[1]"/>
                        <xf:action if="exists($current-c)">
                            <xf:setvalue ref="instance('fr-spell-checker-internal')/unknown-word" value="$current-c/@current"/>
                            <xf:setvalue ref="instance('fr-spell-checker-internal')/correction" value="xxf:split($current-c)[1]"/>
                            <xf:setvalue ref="instance('fr-spell-checker-internal')/context" value="concat(
                                string-join($current-c/preceding-sibling::*/@current, ''),
                                '&lt;span id=''fr-spell-checker-unknown-word'' class=''unknown-word''&gt;',
                                ../unknown-word,
                                '&lt;/span&gt;',
                                string-join($current-c/following-sibling::*/@current, ''))"/>
                            <xxf:script>
                                var YD = YAHOO.util.Dom;
                                // Get the word we want to make visible
                                var unknownWord = document.getElementById("fr-spell-checker-unknown-word");
                                // Get scrollable container accounting for span/nospan
                                var notInDictionaryDiv = unknownWord.parentNode;
                                if (! YD.hasClass(notInDictionaryDiv, "xforms-output")) notInDictionaryDiv = notInDictionaryDiv.parentNode;
                                // Set scrollTop on container so the word is visible
                                notInDictionaryDiv.scrollTop = Math.max(0, unknownWord.offsetTop - unknownWord.offsetHeight);
                            </xxf:script>
                        </xf:action>
                    </xf:action>

                    <!-- Send back result to the component that opened this dialog -->
                    <xf:action ev:event="fr-spell-check-done">
                        <xf:dispatch if="exists(instance('fr-spell-checker-result')/*)" name="fr-spell-check-done" targetid="{instance('fr-spell-checker-internal')/callback-id}">
                            <xf:property name="fr-text" value="string-join(instance('fr-spell-checker-result')/*/@current, '')"/>
                        </xf:dispatch>
                        <xxf:hide dialog="fr-spell-checking-dialog"/>
                    </xf:action>

                </xf:model>

                <!-- The currently considered correction -->
                <xf:var name="current-c" value="(instance('fr-spell-checker-result')/c[empty(@handled)])[1]"/>

                <!-- On open, set focus -->
                <xf:action ev:event="xxforms-dialog-open">
                    <xf:setfocus if="exists($current-c)" control="suggestion"/>
                    <xf:setfocus if="empty($current-c)" control="close"/>
                </xf:action>

                <!-- On close, apply replacements and do cleanup -->
                <xf:action ev:event="xxforms-dialog-close">
                    <xf:setvalue iterate="instance('fr-spell-checker-internal')/*" ref="."/>
                </xf:action>

                <xf:group ref=".[exists($current-c)]" class="xbl-fr-spell-checker-correcting" id="correcting">
                    <xh:table>
                        <xh:tr>
                            <xh:td class="label">Not in dictionary:</xh:td>
                            <xh:td>
                                <xf:output value="instance('fr-spell-checker-internal')/context" mediatype="text/html" id="not-in-dictionary" class="not-in-dictionary"/>
                            </xh:td>
                            <xh:td rowspan="4">
                                <!-- Ignore -->
                                <fr:button id="ignore">
                                    <xf:label>
                                        <xh:img alt="" src="/apps/fr/style/images/silk/script_go.png"/>
                                        Ignore
                                    </xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <!-- Mark this correction as handled -->
                                        <xf:insert context="$current-c" origin="xxf:attribute('handled', 'true')"/>
                                        <!-- Move to the next correction -->
                                        <xf:dispatch name="prepare-next-correction" targetid="fr-spell-checker-model"/>
                                    </xf:action>
                                </fr:button>
                                <!-- Ignore all -->
                                <fr:button id="ignore-all">
                                    <xf:label>
                                        <xh:img alt="" src="/apps/fr/style/images/silk/script_go.png"/>
                                        Ignore All
                                    </xf:label>
                                    <xf:action ev:event="DOMActivate">
                                        <!-- Mark all the correction with the same word as handled -->
                                        <xf:action iterate="$current-c | $current-c/following-sibling::c[@current = $current-c/@current and empty(@handled)]">
                                            <xf:insert context="." origin="xxf:attribute('handled', 'true')"/>
                                        </xf:action>
                                        <!-- Move to the next correction -->
                                        <xf:dispatch name="prepare-next-correction" targetid="fr-spell-checker-model"/>
                                    </xf:action>
                                </fr:button>
                                <xf:group appearance="xxf:internal">
                                    <!-- Change -->
                                    <fr:button id="change-this">
                                        <xf:label>
                                            <xh:img alt="" src="/apps/fr/style/images/silk/script_edit.png"/>
                                            Change
                                        </xf:label>
                                        <xf:action ev:event="DOMActivate">
                                            <!-- Apply replacement -->
                                            <xf:setvalue ref="$current-c/@current" value="instance('fr-spell-checker-internal')/correction"/>
                                            <!-- Mark correction as handled -->
                                            <xf:insert context="$current-c" origin="xxf:attribute('handled', 'true')"/>
                                            <!-- Move to the next correction -->
                                            <xf:dispatch name="prepare-next-correction" targetid="fr-spell-checker-model"/>
                                        </xf:action>
                                    </fr:button>
                                    <!-- Change all -->
                                    <fr:button id="change-all">
                                        <xf:label>
                                            <xh:img alt="" src="/apps/fr/style/images/silk/script_edit.png"/>
                                            Change All
                                        </xf:label>
                                        <xf:action ev:event="DOMActivate">
                                            <!-- For the upcoming correction with the same word -->
                                            <xf:action iterate="$current-c | $current-c/following-sibling::c[@current = $current-c/@current and empty(@handled)]">
                                                <!-- Apply replacement -->
                                                <xf:setvalue ref="@current" value="instance('fr-spell-checker-internal')/correction"/>
                                                <!-- Mark correction as handled -->
                                                <xf:insert context="." origin="xxf:attribute('handled', 'true')"/>
                                            </xf:action>
                                            <!-- Move to the next correction -->
                                            <xf:dispatch name="prepare-next-correction" targetid="fr-spell-checker-model"/>
                                        </xf:action>
                                    </fr:button>
                                </xf:group>
                                <!-- Done -->
                                <fr:button id="done">
                                    <xf:label>
                                        <xh:img alt="" src="/apps/fr/style/images/silk/cross.png"/>
                                        Done
                                    </xf:label>
                                    <xf:dispatch ev:event="DOMActivate" name="fr-spell-check-done" targetid="fr-spell-checker-model"/>
                                </fr:button>
                            </xh:td>
                        </xh:tr>
                        <xh:tr>
                            <xh:td class="label">
                                <xf:label for="correction">Change to:</xf:label>
                            </xh:td>
                            <xh:td>
                                <xf:input ref="instance('fr-spell-checker-internal')/correction" id="correction"/>
                            </xh:td>
                        </xh:tr>
                        <xh:tr>
                            <xh:td class="label">
                                <xf:label for="suggestions">Suggestions:</xf:label>
                            </xh:td>
                            <xh:td>
                                <xf:select1 id="suggestions" appearance="compact" ref="instance('fr-spell-checker-internal')/correction">
                                    <xf:itemset ref="xxf:split(instance('fr-spell-checker-result')/c[1])">
                                        <xf:label value="."/>
                                        <xf:value value="."/>
                                    </xf:itemset>
                                </xf:select1>
                            </xh:td>
                        </xh:tr>
                    </xh:table>
                </xf:group>
                <xf:group ref=".[empty($current-c)]" class="xbl-fr-spell-checker-close" id="close">
                    <xf:setfocus ev:event="xforms-enabled" control="close"/>
                    Done spell checking.
                    <fr:button id="close-dialog">
                        <xf:label>Done</xf:label>
                        <xf:dispatch ev:event="DOMActivate" name="fr-spell-check-done" targetid="fr-spell-checker-model"/>
                    </fr:button>
                </xf:group>
            </xxf:dialog>
        </xxbl:global>
        <xbl:resources>
            <xbl:style src="/xbl/orbeon/spell-checker/spell-checker.css"/>
        </xbl:resources>
        <xbl:template xxbl:transform="oxf:unsafe-xslt">
            <xf:group appearance="xxf:internal" xsl:version="2.0">
                <xf:var name="binding" as="node()?">
                    <xxf:value value="." xxbl:scope="outer" xbl:attr="model context ref bind"/>
                </xf:var>
                <xf:group ref="$binding" id="container">
                    <!-- Trigger that starts spell checking -->
                    <fr:button class="fr-spell-checker-start" id="spell-check">
                        <!-- Bind trigger so it can handle read-only -->
                        <xsl:if test="exists(/fr:spell-checker/(@ref, @bind))"><xsl:attribute name="ref">$binding</xsl:attribute></xsl:if>
                        <xf:label>Spell check</xf:label>
                        <!-- Open dialog -->
                        <xf:dispatch ev:event="DOMActivate" targetid="fr-spell-checker-model" name="fr-spell-check" xxbl:scope="outer">
                            <xf:property name="fr-text" value="$binding" xxbl:scope="inner"/>
                            <xf:property name="fr-callback-id" value="event('xxf:absolute-targetid')"/>
                        </xf:dispatch>
                        <!-- Dialog is calling us back with the result -->
                        <xf:setvalue ev:event="fr-spell-check-done" ref="$binding" value="event('fr-text')"/>
                    </fr:button>
                </xf:group>
            </xf:group>
        </xbl:template>
    </xbl:binding>

</xbl:xbl>