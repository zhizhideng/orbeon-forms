<!--
  Copyright (C) 2011 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xh:html xmlns:xf="http://www.w3.org/2002/xforms"
    xmlns:f="http://orbeon.org/oxf/xml/formatting"
    xmlns:xh="http://www.w3.org/1999/xhtml"
    xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
    xmlns:widget="http://orbeon.org/oxf/xml/widget"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:fr="http://orbeon.org/oxf/xml/form-runner">

    <xh:head>
        <xh:title>Expandable Output</xh:title>
        <xf:model>
            <xf:instance id="instance">
                <instance>
                    <short>Orbeon Forms is a solution to build and deploy web forms.</short>
                    <medium>Download Orbeon Forms. You can get either a developer release or a nightly build. Nightly builds are in general quite stable, and you will also be contributing to the project by using nightly builds and reporting issues on the mailing list.</medium>
                    <long>JavaScript feels like Stink Spirit, the character in Miyazaki’s Spirited Away, who one day arrives at a bathhouse, loaded with all the filth it accumulated through the years. In the movie, Chihiro's, through her courage and generosity, helps Stink Spirit cleanse, and while its essence is unchanged, it comes out cleaner, purer… which brings me to CoffeeScript. A few months ago, at Orbeon, we started using CoffeeScript instead of JavaScript for our client-side code. Just as when we started using Scala instead of Java for server-side code, the switch wasn't disruptive: CoffeeScript compiles to readable JavaScript, and so we could start using CoffeeScript for new functionality, while leaving existing code in JavaScript. So far, our experience has been all but positive.</long>
                    <number>3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632788659361533818279682303019520353018529689957736225994138912497217752834791315155748572424541506959</number>
                    <max-characters>80</max-characters>
                    <tolerance>10</tolerance>
                </instance>
            </xf:instance>
        </xf:model>
        <xh:style type="text/css">
            .xforms-label { display: inline-block; width: 5em; font-size: larger; color: #333 }
            .xbl-fr-expandable-output { padding-right: 4em; padding-bottom: 1em;  }
            .xforms-input { display: block; margin-bottom: .5em }
        </xh:style>
    </xh:head>
    <xh:body>
        <xh:div>
            <xf:input ref="max-characters">
                <xf:label>max</xf:label>
            </xf:input>
            <xf:input ref="tolerance">
                <xf:label>tolerance</xf:label>
            </xf:input>
            <xh:div>
                <fr:expandable-output ref="short" id="short">
                    <xf:label>Short</xf:label>
                </fr:expandable-output>
                <fr:expandable-output ref="medium" max-characters="70" tolerance="10" id="medium">
                    <xf:label>Medium</xf:label>
                </fr:expandable-output>
            </xh:div>
            <xh:div>
                <fr:expandable-output ref="long" id="long">
                    <xf:label>Long</xf:label>
                    <fr:max-characters ref="../max-characters"/>
                    <fr:tolerance ref="../tolerance"/>
                </fr:expandable-output>
                <fr:expandable-output ref="number" id="number">
                    <xf:label>Number</xf:label>
                </fr:expandable-output>
            </xh:div>
        </xh:div>

        <!--<fr:xforms-inspector/>-->
    </xh:body>
</xh:html>
