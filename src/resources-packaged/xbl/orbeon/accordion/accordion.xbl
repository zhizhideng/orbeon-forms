<!--
  Copyright (C) 2009 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xh="http://www.w3.org/1999/xhtml"
         xmlns:xf="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:ev="http://www.w3.org/2001/xml-events"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
         xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
         xmlns:saxon="http://saxon.sf.net/"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
         xmlns:oxf="http://www.orbeon.com/oxf/processors">

    <xbl:script src="/xbl/orbeon/accordion/accordion-menu-v2.js"/>
    <xbl:script src="/xbl/orbeon/accordion/accordion.js"/>

    <xbl:binding id="fr-accordion" element="fr|accordion">
        <xbl:resources>
            <xbl:style src="/xbl/orbeon/accordion/accordion.css"/>
        </xbl:resources>
        <xbl:handlers>
            <xbl:handler event="fr-accordion-toggle-all" phase="target">
                <xf:setvalue ref="operation" value="if (event('selected')) then 'show' else 'hide'"/>
                <xxf:script id="xf-ta">YAHOO.xbl.fr.Accordion.instance(this).toggleAll();</xxf:script>
            </xbl:handler>
            <xbl:handler event="fr-show-all" phase="target">
                <xf:setvalue ref="operation">show</xf:setvalue>
                <xxf:script id="xf-sa">YAHOO.xbl.fr.Accordion.instance(this).toggleAll();</xxf:script>
            </xbl:handler>
            <xbl:handler event="fr-hide-all" phase="target">
                <xf:setvalue ref="operation">hide</xf:setvalue>
                <xxf:script id="xf-ha">YAHOO.xbl.fr.Accordion.instance(this).toggleAll();</xxf:script>
            </xbl:handler>
            <!-- Handler for backward compatibility: prefer dispatching fr-toggle/fr-show/fr-hide directly to fr:case by id. -->
            <xbl:handler event="fr-toggle fr-accordion-toggle" phase="target" xxbl:scope="outer">
                <xf:dispatch targetid="{event('case-id')}" name="{if (event('selected')) then 'fr-show' else 'fr-hide'}"/>
            </xbl:handler>
        </xbl:handlers>
        <xbl:implementation>
            <!-- Local model -->
            <xf:model id="accordion-model">
                <xf:instance id="accordion-instance">
                    <instance>
                        <operation/>
                    </instance>
                </xf:instance>
            </xf:model>
        </xbl:implementation>
        <xbl:template xxbl:transform="oxf:unsafe-xslt">
            <xsl:transform version="2.0">
                <xsl:import href="oxf:/oxf/xslt/utils/copy.xsl"/>
                <xsl:import href="oxf:/oxf/xslt/utils/xbl.xsl"/>

                <xsl:template match="/*">
                    <xf:group ref="." id="fr-accordion-group">

                        <!-- TODO: This should not be necessary, but we need it until this bug is fixed:
                             http://forge.ow2.org/tracker/index.php?func=detail&aid=313850&group_id=168&atid=350207 -->
                        <xsl:copy-of select="namespace::*"/>
                        <xsl:copy-of select="@class"/>

                        <!-- Access to parameters -->
                        <xsl:copy-of select="xxbl:parameter(., 'open-closes-others')"/>

                        <!-- Constructor -->
                        <xxf:script id="xf-en" ev:event="xforms-enabled" ev:target="fr-accordion-group">YAHOO.xbl.fr.Accordion.instance(this).init();</xxf:script>
                        <!-- Toggle -->
                        <xxf:script id="xf-tg" ev:event="fr-accordion-toggle fr-toggle fr-show fr-hide">YAHOO.xbl.fr.Accordion.instance(this).toggle(event.target);</xxf:script>

                        <!-- Dummy controls so JavaScript can access the local instance -->
                        <xf:output model="accordion-model" value="operation" class="xbl-fr-accordion-operation" style="display: none"/>

                        <!-- Markup for the accordion -->
                        <xh:dl id="dl" class="xbl-fr-accordion-dl">
                            <xsl:apply-templates/>
                        </xh:dl>
                    </xf:group>
                </xsl:template>

                <!-- Placed enclosing repeats and group in outer scope -->
                <xsl:template match="/*/xf:repeat | /*/xf:group">
                    <xsl:copy>
                        <xsl:copy-of select="@*"/>
                        <xsl:attribute name="xxbl:scope">outer</xsl:attribute>
                        <xsl:apply-templates/>
                    </xsl:copy>
                </xsl:template>

                <xsl:template match="/*/fr:case | /*/xf:repeat/fr:case | /*/xf:group/fr:case">
                    <!--<xsl:variable name="case-id" as="xs:string" select="if (@id) then @id else generate-id()"/>-->
                    <xsl:variable name="case-id" as="xs:string?" select="@id"/>
                    <xsl:variable name="label" as="element(fr:label)" select="fr:label[1]"/>
                    <!-- Section title -->
                    <!--<xh:dt id="t-{$case-id}" class="a-m-t{ if (@selected = 'true') then ' a-m-t-expand' else ''}">-->
                    <xh:dt class="a-m-t{ if (@selected = 'true') then ' a-m-t-expand' else ''}" onclick="void(0)">
                        <xsl:if test="$case-id"><xsl:attribute name="id" select="concat('t-', $case-id)"/></xsl:if>
                        <xsl:choose>
                            <!-- Static label, just copy content -->
                            <xsl:when test="empty($label/(@ref | @bind | @value))">
                                <xsl:copy-of select="$label/node()"/>
                            </xsl:when>
                            <!-- Dynamic label, generate xf:output -->
                            <xsl:otherwise>
                                <!-- Put content in outer scope -->
                                <xf:output xxbl:scope="outer">
                                    <xsl:copy-of select="$label/(@model | @context | @ref | @bind | @value | node())"/>
                                </xf:output>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xh:dt>
                    <!-- Section body -->
                    <!--<xh:dd id="d-{$case-id}" class="a-m-d{ if (@selected = 'true') then ' a-m-d-expand' else ''}">-->
                    <xh:dd class="a-m-d{ if (@selected = 'true') then ' a-m-d-expand' else ''}">
                        <xsl:if test="$case-id"><xsl:attribute name="id" select="concat('d-', $case-id)"/></xsl:if>
                        <xh:div class="bd">
                            <!-- Put content in outer scope -->
                            <xf:group xxbl:scope="outer">
                                <xsl:if test="$case-id">
                                    <xsl:attribute name="id" select="$case-id"/>
                                    <!-- Custom events -->
                                    <xf:setvalue ev:event="fr-toggle" ev:target="{$case-id}" ref="operation" xxbl:scope="inner">toggle</xf:setvalue>
                                    <xf:setvalue ev:event="fr-show" ev:target="{$case-id}" ref="operation" xxbl:scope="inner">show</xf:setvalue>
                                    <xf:setvalue ev:event="fr-hide" ev:target="{$case-id}" ref="operation" xxbl:scope="inner">hide</xf:setvalue>
                                </xsl:if>

                                <xsl:copy-of select="node() except $label"/>
                            </xf:group>
                        </xh:div>
                    </xh:dd>
                </xsl:template>

            </xsl:transform>
        </xbl:template>
    </xbl:binding>
</xbl:xbl>
